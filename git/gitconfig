[color]
  ui=auto
  status = auto
  branch = auto
  interactive = auto
  diff = auto
  mergeoptions = --no-edit

[color "branch"]
  current = cyan
  local = yellow
  remote = green

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[color "grep"]
  linenumber = cyan
  filename = green

[user]
  name = dan-dbnl
  email = dan@distributional.com

[core]
  editor = vim
  excludesfile = ~/.gitignore

[grep]
  lineNumber = True
  patternType = perl

[init]
  defaultBranch = main

[pull]
  ff = only

[alias]

  git = !exec git
  g = !exec git

  a = add
  b = branch
  c = commit
  d = diff
  h = rev-parse HEAD
  m = merge
  p = push
  s = status
  t = tag

  ap = add -p
  co = checkout
  d1 = diff HEAD~1
  dc = diff --cached
  dh = diff origin/main HEAD
  fa = fetch --all
  # files changed in this branch (will include changed-then-unchanged)
  fc = !git log --oneline --name-only origin/main..HEAD | ag -v ' ' | sort -u
  ll = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s%Cgreen (%an)' --decorate --numstat
  lg = log --pretty=format:'%C(yellow)%h %Cred%d %Creset%s (%Cgreen%an)' --graph
  ls = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s%Cgreen [%an]' --decorate
  mm = merge main
  m- = merge -
  mc = merge --continue
  pl = pull
  pt = push --tags
  pr = !gh pr create --title "$(git rev-parse --abbrev-ref HEAD)" --body-file .github/pull_request_template.md
  pu = !git push -u origin $(git rev-parse --abbrev-ref HEAD)
  rc = rebase --continue
  ri = rebase -i
  sm = !git submodule sync && git submodule update
  tl = !git tag --sort=-v:refname -l | head -1

  com = !git checkout main && git fetch --all --prune
  rom = !git rebase origin/main

  head = log --oneline origin..HEAD

  # hub-related
  #pr="!f() { \
    #BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD); \
    #git push -u origin $BRANCH_NAME; \
    #hub pull-request --no-edit -b main; \
    #hub pr show; \
  #};f "

  ci = "!hub ci-status"
  ci-status = "!hub ci-status -v"
  ci-fail = "!hub ci-status -v | grep âœ– | cut -d' ' -f2"

[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process

[credential]
	helper = store
